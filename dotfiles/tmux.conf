#################
#  TMUX CONFIG  #
#################

# set prefix
unbind-key           C-b
set-option -g prefix C-space
bind-key             C-a send-prefix


#############
#  OPTIONS  #
#############

# use vi keys
set-option -gw mode-keys vi

# set bigger history limit
set-option -g history-limit 1000000

# so you don't end up with window numbers like: 0 1 4 5 6
set-option -g renumber-windows on

# mouse support
set-option -g mouse on

# set title
set-option -g set-titles        on
set-option -g set-titles-string "tmux [#S]"

# 256 color support
set-option -g  default-terminal   'tmux-256color'
set-option -g  default-terminal   "${TERM}"
set-option -ga terminal-overrides ',xterm-termite:Tc,xterm-kitty:Tc,alacritty:Tc,xterm-256color:Tc'
set-option -ga terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set-option -ga terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# style of function key sequences
set-window-option -g xterm-keys on

# start window numbers from 1
set-option -g base-index 1

# set escape time so vim is responsive inside tmux
set-option -g escape-time 1

# show statusbar
set-option -g status on

# status bar redraw interval
set-option -g status-interval 5

# wrap search
set-option -g wrap-search on

# repeat time
set-option -g repeat-time 700


##############
#  BINDINGS  #
##############

# clear history
#bind -n C-l clear-history
#bind -n C-l send-keys -R \; clear-history
bind -n C-l send-keys C-l \; clear-history

# reload tmux config
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"

# source .tmux file
bind-key T confirm-before -p "Source .tmux file? (y/N)" "source-file .tmux"

# kill session / window / panel
bind-key S confirm-before -p "Kill session '#S'? (y/N)" kill-session
bind-key W confirm-before -p "Kill window '#W'? (y/N)"  kill-window
bind-key P confirm-before -p "Kill pane '#T'? (y/N)"    kill-pane

# rename session / window / panel
bind-key M-S command-prompt -p "Rename session:" -I '#S' 'rename-session %1'
bind-key M-W command-prompt -p "Rename window:"  -I '#W' 'rename-window %1'
bind-key M-r command-prompt -p "Rename pane:"    -I '#T' 'rename-pane %1'
bind-key   $ command-prompt -p "Rename session:" -I '#S' 'rename-session %1'
bind-key   r command-prompt -p "Rename window:"  -I '#W' 'rename-window %1'

# create new panes and windows
bind-key C-v split-window -h -c "#{pane_current_path}"
bind-key   v split-window -h
bind-key C-x split-window -v -c "#{pane_current_path}"
bind-key   x split-window -v
bind-key C-c new-window   -a -c "#{pane_current_path}"
bind-key   c new-window

# create small horizontal pane
bind-key C-u split-window -v -l 3 -c "#{pane_current_path}"

# smart pane switching with awareness of vim splits
# makes ctrl-j and ctrl-k navigate fzf search results when fzf active in pane
# providing the same behavior as ctrl-j and ctrl-k when navigating ctrl-p
# results inside vim.

IS_VIM="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
IS_FZF="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# switch panes
bind-key  C-h                   if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-h" "select-pane -L"
bind-key  C-j                   if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-j" "select-pane -D"
bind-key  C-k                   if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-k" "select-pane -U"
bind-key  C-l                   if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-l" "select-pane -R"

# switch panes (copy-mode)
bind-key -T copy-mode-vi C-h      if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-h" "select-pane -L"
bind-key -T copy-mode-vi C-j      if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-j" "select-pane -D"
bind-key -T copy-mode-vi C-k      if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-k" "select-pane -U"
bind-key -T copy-mode-vi C-l      if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-l" "select-pane -R"
bind-key -T copy-mode    C-h      if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-h" "select-pane -L"
bind-key -T copy-mode    C-j      if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-j" "select-pane -D"
bind-key -T copy-mode    C-k      if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-k" "select-pane -U"
bind-key -T copy-mode    C-l      if-shell "${IS_VIM} || ${IS_FZF}" "send-keys C-l" "select-pane -R"

# fallback
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

# resize panes
bind-key -r h resize-pane -L 5
bind-key -r j resize-pane -D 5
bind-key -r k resize-pane -U 5
bind-key -r l resize-pane -R 5

# spread panes out evenly
bind-key C-e select-layout -E

# select pane
bind-key C-m select-pane -m
bind-key   m select-pane -M

# change split direction
bind-key V move-pane -h -t '.-'
bind-key X move-pane -v -t '.-'

# join panes
bind-key M-v join-pane -h
bind-key M-x join-pane -v

# rotate panes
bind-key C-r rotate-window

# swap panes
bind-key -r H swap-pane -U
bind-key -r L swap-pane -D

# swap windows
bind-key -r M-h swap-window -s -1 \; previous-window
bind-key -r M-l swap-window -s +1 \; next-window
bind-key -r <   swap-window -s -1 \; previous-window
bind-key -r >   swap-window -s +1 \; next-window

# swap marked
bind-key M-p swap-pane   \; select-pane -M
bind-key M-w swap-window \; select-pane -M

# switch windows
bind-key -n M-h previous-window
bind-key -n M-l next-window

# switch session
bind-key C-n switch-client -n
bind-key C-p switch-client -p

# move window
bind-key M-m command-prompt -p 'Move window to here:' -I '#S:#I' 'move-window -s %1'
bind-key   M command-prompt -p 'Move this window to:' -I '#S:#I' 'move-window -t %1'

# link / unlink window
bind-key M-b command-prompt -p 'Link window:' -I '#S:#I' 'if-shell -F "%1" "link-window -s %1" "unlink-window"'
bind-key   B unlink-window

# save buffer to file
bind-key M-s command-prompt -p 'Save history to filename:' -I '~/.tmux_history' 'capture-pane -S - -E - ; save-buffer %1 ; delete-buffer'

# display panes
bind-key C-d display-panes

# toggle status bar
bind-key C-s set-option status

# toggle pane border status
bind-key C-t set-option -g pane-border-status

# toggle synchronize
bind-key ^ set-window-option synchronize-panes


###############
#  COPY MODE  #
###############

# set clipboard
set-option -g set-clipboard external

# copy and paste
bind-key C-y copy-mode
bind-key   y copy-mode
bind-key   p paste-buffer

# copy mode bindings
bind-key -T copy-mode-vi v                 send-keys -X begin-selection
bind-key -T copy-mode-vi C-v               send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Space             send-keys -X clear-selection
bind-key -T copy-mode-vi d                 send-keys -X halfpage-down
bind-key -T copy-mode-vi u                 send-keys -X halfpage-up
bind-key -T copy-mode-vi y                 send-keys -X copy-pipe-no-clear   'xclip -in -selection clipboard'
bind-key -T copy-mode-vi Enter             send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear   'xclip -in -selection primary'
bind-key -T copy-mode-vi q                 send-keys -X cancel
bind-key -T copy-mode-vi Ã¤                 send-keys -X back-to-indentation
bind-key -T copy-mode-vi /                 command-prompt -p '/'              'send-keys -X search-forward %1'
bind-key -T copy-mode-vi ?                 command-prompt -p '?'              'send-keys -X search-backward %1'
bind-key -T copy-mode-vi Escape            if-shell -F '#{selection_present}' 'send-keys -X clear-selection' 'send-keys -X cancel'

# scroll speed
bind-key -T copy-mode-vi WheelUpPane   send-keys -N 3 -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -N 3 -X scroll-down
bind-key -T copy-mode    WheelUpPane   send-keys -N 3 -X scroll-up
bind-key -T copy-mode    WheelDownPane send-keys -N 3 -X scroll-down

set -g terminal-overrides 'xterm*:smcup@:rmcup@'

####################
#  MOUSE BINDINGS  #
####################

bind-key -n DoubleClick1StatusLeft switch-client -n


###################
#  MISC BINDINGS  #
###################

# open git log (or dotfiles log if not available)
bind-key C-g split-window -h -f -d -c "#{pane_current_path}" "git lg || ([[ $? -ne 141 ]] && dotfiles lg)"
bind-key   g respawn-pane -t "{right}" -k "git lg || ([[ $? -ne 141 ]] && dotfiles lg)"
bind-key C-o split-window -h -f -d -c "#{pane_current_path}" "git lgo || ([[ $? -ne 141 ]] && dotfiles lgo)"
bind-key   o respawn-pane -t "{right}" -k "git lgo || ([[ $? -ne 141 ]] && dotfiles lgo)"
bind-key C-q kill-pane    -t "{right}"


###############
#  STATUSBAR  #
###############

# Use minimal statusbar if in TTY, otherwise use powerline statusbar


# #############
# #  PLUGINS  #
# #############
# 
# set-option -g @plugin 'tmux-plugins/tpm'
# set-option -g @plugin 'tmux-plugins/tmux-sensible'
# #set-option -g @plugin 'tmux-plugins/tmux-resurrect'
# #set-option -g @plugin 'tmux-plugins/tmux-continuum'
# #set-option -g @plugin 'tmux-plugins/tmux-copycat'
# #set-option -g @plugin 'tmux-plugins/tmux-yank'
# set-option -g @plugin 'NHDaly/tmux-better-mouse-mode'
# set-option -g @plugin 'tmux-plugins/vim-tmux-focus-events'
# 
# # plugin settings
# #set-option -g @continuum-boot                               'on'
# #set-option -g @continuum-systemd-start-cmd                  'new-session -d -s main'
# #set-option -g @resurrect-strategy-vim                       'session'
# 
# set-option -g @scroll-down-exit-copy-mode                   'on'
# set-option -g @scroll-without-changing-pane                 'on'
# set-option -g @scroll-in-moused-over-pane                   'on'
# set-option -g @scroll-speed-num-lines-per-scroll            '1'
# set-option -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'
# 
# # initialize tpm (keep this line at the very bottom of .tmux.conf)
# run-shell '~/.tmux/plugins/tpm/tpm'

# # Themepack format options
# set -goq @themepack-status-left-area-left-format "#S"
# set -goq @themepack-status-left-area-middle-format "#I"
# set -goq @themepack-status-left-area-right-format "#P"
# set -goq @themepack-status-right-area-left-format "#H"
# set -goq @themepack-status-right-area-middle-format "%H:%M:%S"
# set -goq @themepack-status-right-area-right-format "%d-%b-%y"
# set -goq @themepack-window-status-current-format "#I:#W#F"
# set -goq @themepack-window-status-format "#I:#W#F"

# # Customizable prefixes and suffixes for @themepack-* format options
# set -goq @themepack-status-left-area-left-prefix ""
# set -goq @themepack-status-left-area-left-suffix ""
# set -goq @themepack-status-left-area-middle-prefix ""
# set -goq @themepack-status-left-area-middle-suffix ""
# set -goq @themepack-status-left-area-right-prefix ""
# set -goq @themepack-status-left-area-right-suffix ""
# set -goq @themepack-status-right-area-left-prefix ""
# set -goq @themepack-status-right-area-left-suffix ""
# set -goq @themepack-status-right-area-middle-prefix ""
# set -goq @themepack-status-right-area-middle-suffix ""
# set -goq @themepack-status-right-area-right-prefix ""
# set -goq @themepack-status-right-area-right-suffix ""
# set -goq @themepack-window-status-current-prefix ""
# set -goq @themepack-window-status-current-suffix ""
# set -goq @themepack-window-status-prefix ""
# set -goq @themepack-window-status-suffix ""

# # Apply prefixes and suffixes to @themepack-* format options
# set -gqF @themepack-status-left-area-left-format "#{@themepack-status-left-area-left-prefix}#{@themepack-status-left-area-left-format}#{@themepack-status-left-area-left-suffix}"
# set -gqF @themepack-status-left-area-middle-format "#{@themepack-status-left-area-middle-prefix}#{@themepack-status-left-area-middle-format}#{@themepack-status-left-area-middle-suffix}"
# set -gqF @themepack-status-left-area-right-format "#{@themepack-status-left-area-right-prefix}#{@themepack-status-left-area-right-format}#{@themepack-status-left-area-right-suffix}"
# set -gqF @themepack-status-right-area-left-format "#{@themepack-status-right-area-left-prefix}#{@themepack-status-right-area-left-format}#{@themepack-status-right-area-left-suffix}"
# set -gqF @themepack-status-right-area-middle-format "#{@themepack-status-right-area-middle-prefix}#{@themepack-status-right-area-middle-format}#{@themepack-status-right-area-middle-suffix}"
# set -gqF @themepack-status-right-area-right-format "#{@themepack-status-right-area-right-prefix}#{@themepack-status-right-area-right-format}#{@themepack-status-right-area-right-suffix}"
# set -gqF @themepack-window-status-current-format "#{@themepack-window-status-current-prefix}#{@themepack-window-status-current-format}#{@themepack-window-status-current-suffix}"
# set -gqF @themepack-window-status-format "#{@themepack-window-status-prefix}#{@themepack-window-status-format}#{@themepack-window-status-suffix}"

# # Theme options
# set -goq  @theme-clock-mode-colour red
# set -goq  @theme-clock-mode-style 24
# set -goq  @theme-display-panes-active-colour default
# set -goq  @theme-display-panes-colour default
# set -goq  @theme-message-bg default
# set -goq  @theme-message-command-bg default
# set -goq  @theme-message-command-fg default
# set -goq  @theme-message-fg default
# set -goq  @theme-mode-bg red
# set -goq  @theme-mode-fg default
# set -goq  @theme-pane-active-border-bg default
# set -goq  @theme-pane-active-border-fg green
# set -goq  @theme-pane-border-bg default
# set -goq  @theme-pane-border-fg default
# set -goq  @theme-status-bg yellow
# set -goq  @theme-status-fg cyan
# set -goq  @theme-status-interval 1
# set -goq  @theme-status-justify centre
# set -goqF @theme-status-left "#{@themepack-status-left-area-left-format} #[fg=white]Â» #[fg=yellow]#{@themepack-status-left-area-middle-format} #[fg=cyan]#{@themepack-status-left-area-right-format}"
# set -goq  @theme-status-left-bg black
# set -goq  @theme-status-left-fg green
# set -goq  @theme-status-left-length 40
# set -goqF @theme-status-right "#{@themepack-status-right-area-left-format} #[fg=white]Â« #[fg=yellow]#{@themepack-status-right-area-middle-format} #[fg=green]#{@themepack-status-right-area-right-format}"
# set -goq  @theme-status-right-bg black
# set -goq  @theme-status-right-fg cyan
# set -goq  @theme-status-right-length 40
# set -goq  @theme-window-status-activity-bg black
# set -goq  @theme-window-status-activity-fg yellow
# set -goq  @theme-window-status-current-bg red
# set -goq  @theme-window-status-current-fg black
# set -goqF @theme-window-status-current-format " #{@themepack-window-status-current-format} "
# set -goqF @theme-window-status-format " #{@themepack-window-status-format} "
# set -goq  @theme-window-status-separator ""

# # Customizable prefixes and suffixes for @theme-* format options
# set -goq @theme-status-left-prefix ""
# set -goq @theme-status-left-suffix ""
# set -goq @theme-status-right-prefix ""
# set -goq @theme-status-right-suffix ""
# set -goq @theme-window-status-current-prefix ""
# set -goq @theme-window-status-current-suffix ""
# set -goq @theme-window-status-prefix ""
# set -goq @theme-window-status-suffix ""

# # Apply prefixes and suffixes to @theme-* format options
# set -gqF @theme-status-left "#{@theme-status-left-prefix}#{@theme-status-left}#{@theme-status-left-suffix}"
# set -gqF @theme-status-right "#{@theme-status-right-prefix}#{@theme-status-right}#{@theme-status-right-suffix}"
# set -gqF @theme-window-status-current-format "#{@theme-window-status-current-prefix}#{@theme-window-status-current-format}#{@theme-window-status-current-suffix}"
# set -gqF @theme-window-status-format "#{@theme-window-status-prefix}#{@theme-window-status-format}#{@theme-window-status-suffix}"

# # Apply @theme-* options to Tmux
# set -gF  display-panes-active-colour "#{@theme-display-panes-active-colour}"
# set -gF  display-panes-colour "#{@theme-display-panes-colour}"
# set -gF  message-command-style "fg=#{@theme-message-command-fg},bg=#{@theme-message-command-bg}"
# set -gF  message-style "fg=#{@theme-message-fg},bg=#{@theme-message-bg}"
# set -gF  status-interval "#{@theme-status-interval}"
# set -gF  status-justify "#{@theme-status-justify}"
# set -gF  status-left "#{@theme-status-left}"
# set -gF  status-left-length "#{@theme-status-left-length}"
# set -gF  status-left-style "fg=#{@theme-status-left-fg},bg=#{@theme-status-left-bg}"
# set -gF  status-right "#{@theme-status-right}"
# set -gF  status-right-length "#{@theme-status-right-length}"
# set -gF  status-right-style "fg=#{@theme-status-right-fg},bg=#{@theme-status-right-bg}"
# set -gF  status-style "fg=#{@theme-status-fg},bg=#{@theme-status-bg}"
# set -gwF clock-mode-colour "#{@theme-clock-mode-colour}"
# set -gwF clock-mode-style "#{@theme-clock-mode-style}"
# set -gwF mode-style "fg=#{@theme-mode-fg},bg=#{@theme-mode-bg}"
# set -gwF pane-active-border-style "fg=#{@theme-pane-active-border-fg},bg=#{@theme-pane-active-border-bg}"
# set -gwF pane-border-style "fg=#{@theme-pane-border-fg},bg=#{@theme-pane-border-bg}"
# set -gwF window-status-activity-style "fg=#{@theme-window-status-activity-fg},bg=#{@theme-window-status-activity-bg}"
# set -gwF window-status-current-format "#{@theme-window-status-current-format}"
# set -gwF window-status-current-style "fg=#{@theme-window-status-current-fg},bg=#{@theme-window-status-current-bg}"
# set -gwF window-status-format "#{@theme-window-status-format}"
# set -gwF window-status-separator "#{@theme-window-status-separator}"
# 
# Dracula Color Pallette
white='#f8f8f2'
gray='#44475a'
dark_gray='#282a36'
light_purple='#bd93f9'
dark_purple='#6272a4'
cyan='#8be9fd'
green='#50fa7b'
orange='#ffb86c'
red='#ff5555'
pink='#ff79c6'
yellow='#f1fa8c'

# # Dracula Colours
# BACKGROUND_COLOR='#282a36'
# CURRENT_LINE_COLOR='#44475a'
# FOREGROUND_COLOR='#f8f8f2'
# COMMENT_COLOR='#6272a4' # dark purple
# CYAN='#8be9fd'
# GREEN='#50fa7b'
# ORANGE='#ffb86c'
# PINK='#ff79c6'
# PURPLE='#bd93f9'
# RED='#ff5555'
# YELLOW='#f1fa8c'

# set -g default-terminal "screen-256color"

# # pane border
# set -g pane-border-style fg=$COMMENT_COLOR
# set -g pane-active-border-style fg=$PINK
# # message text
# set -g message-style bg=$CURRENT_LINE_COLOR,fg=$CYAN
# # status
# set -g status-style bg=$CURRENT_LINE_COLOR,fg=$PURPLE
# set -g status-interval 1
# # status left
# # are we controlling tmux or the content of the panes?
# set -g status-left '#[bg=$FOREGROUND_COLOR]#[fg=$BACKGROUND_COLOR]#{?client_prefix,#[bg=$PINK],} âº '
# # are we zoomed into a pane?
# set -ga status-left '#[bg=$CURRENT_LINE_COLOR]#[fg=$PINK] #{?window_zoomed_flag, â  ,   }'
# # window status
# set-window-option -g window-status-style fg=$PURPLE,bg=default
# set-window-option -g window-status-current-style fg=$PINK,bg=$BACKGROUND_COLOR
# set -g window-status-current-format "#[fg=$CURRENTLINE_COLOR]#[bg=$PURPLE]î°#[fg=$FOREGROUND_COLOR]#[bg=$PURPLE] #I #W #[fg=$PURPLE]#[bg=$CURRENTLINE_COLOR]î°"
# set -g window-status-format "#[fg=$FOREGROUND_COLOR]#[bg=$CURRENTLINE_COLOR]#I #W #[fg=$CURRENTLINE_COLOR]î° "

# # status right
# set -g status-right '#[fg=$CYAN,bg=$CURRENTLINE_COLOR]î²#[fg=$CURRENTLINE_COLOR,bg=$CYAN] #(tmux-mem-cpu-load -g 5 --interval 2) '
# set -ga status-right '#[fg=$PINK,bg=$CYAN]î²#[fg=$CURRENTLINE_COLOR,bg=$PINK] #(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") '
# set -ga status-right '#[fg=$PURPLE,bg=$PINK]î²#[fg=$FOREGROUND_COLOR,bg=$PURPLE] %a %H:%M:%S #[fg=$COMMENT_COLOR]%Y-%m-%d '
#
#
# This is the tmux dracula theme file
# Dracula theme colors in use, with the following colors:
# background   darkest grey   colour17    #282a36 (mode line itself)
# current line dark grey      colour59    #44475a
# selection    dark grey      colour59    #44475a
# foreground   cream white    colour231   #f8f8f2
# comment      dark blue      colour61    #6272a4
# cyan         cyan           colour117   #8be9fd
# green        green          colour84    #50fa7b
# orange       orange         colour215   #ffb86c
# pink         pink           colour212   #ff79ca
# purple       purple         colour141   #bd93f9
# red          red            colour203   #ff5555
# yellow       yellow         colour228   #f1fa8c

set-option -g status-position top
# default inactive statusbar colors
# Dracula theme
set-option -g status-bg "#282a36"  # Background
set-option -g status-fg "#f8f8f2"  # Foreground

# set-window-option -g automatic-rename off
# set-option -g allow-rename off 

#  Character pair Replaced with
# https://linux.die.net/man/1/tmux
#
#  #(shell-command) First line of the command's output
#  #[attributes] Colour or attribute change
#  #H Hostname of local host
#  #h Hostname of local host without the domain name
#  #F Current window flag
#  #I Current window index
#  #P Current pane index
#  #S Session name
#  #T Current window title
#  #W Current window name

# pane number display
set-option -g display-panes-active-colour blue
set-option -g display-panes-colour brightred

# Selected window
set-option -g window-status-current-format "#[bg=#282a36,fg=#282a36]#[bg=#282a36,fg=#bd93f9,bold]#I:#[bg=#282a36,fg=#bd93f9]#W#[bg=#282a36,fg=#282a36]"
# Inactive window
set-option -g window-status-format "#[bg=#282a36,fg=#282a36]#[bg=#282a36,fg=colour231]#I:#W#[bg=#282a36,fg=#282a36]"

# Remove padding at the left hand side
set -g status-left ""
# Show a clock at the right hand side
set -g status-right "#[bg=#282a36,fg=#6272a4,bold]#[bg=#6272a4,fg=#f8f8f2] %H:%M "