# man yabai for all settings
# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
# sudo yabai --load-sa

# ===== Rules ==================================
yabai -m rule --add label="System Information" app="^System Information$" manage=off
yabai -m rule --add label="System Preferences" app="^System Preferences$" manage=off
yabai -m rule --add label="System Settings" app="^System Settings$" manage=off
yabai -m rule --add label="Archive Utility" app="^Archive Utility$" manage=off
yabai -m rule --add label="Finder" app="^Bin$" manage=off
yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
yabai -m rule --add label="Digital Colour Meter" app="Digital Colour Meter" manage=off
yabai -m rule --add app="Authy Desktop" manage=off
yabai -m rule --add app="Calendar" manage=off
yabai -m rule --add app="Installer" manage=off
yabai -m rule --add app="Okta Verify" manage=off
yabai -m rule --add app="Skitch" manage=off
yabai -m rule --add app="iTerm2" manage=on 

yabai -m rule --add label="Huddle" app="Slack" title="- Huddle$" manage=off
yabai -m rule--add app=^Slack$ subrole!=AXStandardWindow border=off

# Some Intellij settings, in case you are using it. float Intellij Preference panes
#
yabai -m rule --add app="Calculator" manage=off

# make JetBrains products popup windows float
apps='^(IntelliJ IDEA|WebStorm|GoLand|PyCharm)$'
yabai -m rule --add app="JetBrains Toolbox" manage=off
yabai -m rule --add app="${apps}" manage=off
yabai -m rule --add app="${apps}" title="( – )" manage=on


#yabai -m rule --add app="JetBrains Toolbox" manage=off
#yabai -m rule --add app="IntelliJ IDEA" title="^$" manage=off
#yabai -m rule --add app="IntelliJ IDEA" title="Project Structure|Tip of the Day|Settings|Prefences|Configuration|History for|Connect to Cluster|Add Action|Delete" manage=off
#yabai -m rule --add app="IntelliJ IDEA" title="^Select" manage=off

#yabai -m rule --add app='Intellij IDEA' title='Preferences' manage=off
#yabai -m rule --add app='Intellij IDEA' title='Edit configuration' manage=off
yabai -m rule --add app="GlobalProtect" title="^Settings$" manage=off
#yabai -m rule --add app='Rancher Desktop' title='Preferences' manage=off

# yabai -m rule --add app="^(Vimac|Calculator|Software Update|Dictionary|VLC|System Preferences|System Settings|zoom.us|Photo Booth|Archive Utility|LibreOffice|App Store|Alfred|Activity Monitor)$" manage=off

yabai -m config layout                       bsp

yabai -m config top_padding    3
yabai -m config bottom_padding 7
yabai -m config left_padding   7
yabai -m config right_padding  7
yabai -m config window_gap     7

# sketchybar
yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_moved action="sketchybar --trigger windows_on_spaces"

# refresh my Übersicht bar when the space changes
#yabai -m signal --add event=space_changed \
#    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"spaces-widget\"'"

## when window closed focus next
yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

yabai -m signal --add event=window_created action="bash ~/.config/yabai/scripts/window_created.sh"
#yabai -m signal --add event=window_moved action="bash ~/.config/yabai/scripts/window_moved.sh"
yabai -m signal --add event=space_changed action="bash ~/.config/yabai/scripts/space_full_screen.sh"

# set focus follows mouse mode (default: off, options: off, autoraise, autofocus)
yabai -m config focus_follows_mouse off
# When focusing a window, put the mouse at its center
yabai -m config mouse_follows_focus on

# swap windows if moved with mouse
yabai -m config mouse_action1                move
# resize windows if resized with mouse
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# floating windows are always on top (default: off)

# Specify which display a newly created window should be managed in.
# default: The display in which the window is created (standard macOS behaviour).
# focused: The display that has focus when the window is created.
# cursor: The display that currently holds the mouse cursor.
yabai -m config window_origin_display        focused
# Specify whether managed windows should become the first or second leaf-node.
# yabai -m config window_placement             second_child


yabai -m config window_border_blur off # required to prevent blur on slack share screen
yabai -m config window_shadow                on
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config window_border                on
yabai -m config window_border_width          3
yabai -m config active_window_border_color   0xff5ADECD
yabai -m config normal_window_border_color   0x00C5CFF5
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 true
yabai -m config mouse_modifier               ctrl
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap
